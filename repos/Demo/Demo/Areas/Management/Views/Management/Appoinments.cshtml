@using Demo.Models.DummyModels
@using NonFactors.Mvc.Grid
@using System.Web.Mvc
@inject IHttpContextAccessor Accessor
@model Demo.Models.DummyModels.AdminInstances

@{
    ViewData["Title"] = "Doctor Details";
    var count = @Accessor.HttpContext.Session.GetInt32("total");
    var hospitalId = @Accessor.HttpContext.Session.GetInt32("ManagementAdminId");
    var hospitalID = @Accessor.HttpContext.Session.GetInt32("ManagementForStatus");
    var superadminId = @Accessor.HttpContext.Session.GetInt32("SuperAdminId");
}
<style>
    .tick-mark {
        cursor: pointer;
    }
</style>
@*   20 June - Added Filter Functionality By Mvc Grid Package
*@
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet">


<div class="container mt-3">
    @if (User.IsInRole("ManagementAdmin") || User.IsInRole("SuperAdmin"))
    {
        <partial name="PartialsViews/_HeaderForManagAdmin" />
    }
    @if (TempData["success"] != null)
    {
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
        <script type="text/javascript">
            toastr.success('@TempData["success"]');
        </script>
    }
    @if (TempData["error"] != null)
    {
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
        <script type="text/javascript">
            toastr.danger('@TempData["error"]');
        </script>
    }

    @if (User.IsInRole("ManagementAdmin") && Model.Appointments.Any())
    {
        var hospitalName = Model.Appointments.First().HospitalName;
        <h3 style="color:black">Appoinments Details Of @hospitalName</h3>
    }
    else
    {
        <div class="row mt-2 ms-4">
            <h4 class="row col-md-3">Today's Total Appointments: @count</h4>
            <div class="col-md-9 ms-4" style="display: flex; align-content: stretch; justify-content: flex-end;">
                <div class="form-group col-md-3">
                    <label for="fromDate">Date From:</label>
                    <input type="date" name="fromDate" class="form-control" id="fromDate" autocomplete="off">
                </div>
                <div class="form-group col-md-3">
                    <label for="toDate">Date To:</label>
                    <input type="date" name="toDate" class="form-control" id="toDate" autocomplete="off">
                </div>
                <div class="col-md-2">
                    <button class="btn btn-primary btn-sm " style="margin-top: 33px;" onclick="ApproveAll()">
                        Approve All
                    </button>
                </div>
            </div>
        </div>
    }
    <div class="mt-4">
        <div class="row">
            <div class="col-md">
                <a asp-area="Management" asp-action="AddEditAppointment" asp-controller="Management" class="btn btn-success">Create Appointment</a>
                <button class="btn btn-danger" onclick="MissedAll()">
                    Check for missed appointments
                </button>
            </div>

        </div>
    </div>
</div>
<div id="appointmentsContainer" class="mt-3">

    <div class="mt-5">

        @(Html
        .Grid(Model.Appointments)
        .Build(columns =>
        {
        columns.Add(model => model.UserName).Titled("UserName");
        columns.Add(model => model.DoctorName).Titled("Doctornames");
        columns.Add(model => model.AppointmentTime).Titled("Time");
        columns.Add(model => model.AppointmentDate).Titled("Date");
        columns.Add(model => model.AppointmentStatus).Titled("Status").RenderedAs((model, row) =>
        {
        var approveId = "approve_" + model.AppointmentID;
        var rejectId = "reject_" + model.AppointmentID;
         
        var approveUrl = "";
        var rejectUrl = "";
        if(User.IsInRole("SuperAdmin")){
         approveUrl = Url.Action("UpdateAppointmentStatus", "Management", new { id = model.AppointmentID, status = "Approve",approveId = @superadminId });
         rejectUrl = Url.Action("UpdateAppointmentStatus", "Management", new { id = model.AppointmentID, status = "Reject",rejectId =@superadminId });
        }
        else if(User.IsInRole("ManagementAdmin")){
         approveUrl = Url.Action("UpdateAppointmentStatus", "Management", new { id = model.AppointmentID, status = "Approve",approveId = @hospitalID });
         rejectUrl = Url.Action("UpdateAppointmentStatus", "Management", new { id = model.AppointmentID, status = "Reject",rejectId = @hospitalID });
        }
        var statusText = model.AppointmentStatus == "Approve" ? "Approved" : "Rejected";
        var statusClass = model.AppointmentStatus == "Approve" ? "text-success" : "text-danger";
        if(model.AppointmentStatus == "Pending"){
        statusText = "Pending";
        statusClass = "text-warning";
        }
        if(model.AppointmentStatus == "Missed"){
        statusText = "Missed";
        statusClass = "text-danger";
        }
        if(model.AppointmentStatus == "Completed"){
        statusText = "Completed";
        statusClass = "text-success";
        }

        
        return Html.Raw($"<span  id='{approveId}' class='tick-mark {(model.AppointmentStatus == "Approve" ? "selected" : "")}' onclick='updateAppointmentStatus(\"{approveId}\", \"{approveUrl}\")'>&#10004;</span>" +
        $"<span id='{rejectId}' class='tick-mark {(model.AppointmentStatus == "Reject" ? "selected" : "")}' onclick='updateAppointmentStatus(\"{rejectId}\", \"{rejectUrl}\")'>&#10008;</span>" +
        $"<span id='status_{model.AppointmentID}' class='{statusClass}'>{statusText}</span>");
        })
        .Encoded(false);

        columns.Add().Titled("Edit").RenderedAs((model, row) =>
        {

        return Html.ActionLink("Edit", "AddEditAppointment", new { area = "Management", appId = model.AppointmentID }, new { @class = "btn btn-primary" });
        });

        columns.Add().Titled("Delete").RenderedAs((model, row) =>
        {
        return Html.ActionLink("Delete", "DeleteAppoinment", new { area = "Management", id = model.AppointmentID }, new { @class = "btn btn-danger" });
        });

        }).Using(GridFilterMode.Header)
        .Empty("No data found")
        .Pageable(pager =>
        {
        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 2, "2" }, { 4, "4" },{ 5, "5" },{ 10, "10" } };
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 3;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 5;
        })
        .Filterable()
        .Sortable()
        )
    </div>
</div>
<script src="~/js/mvc-grid/mvc-grid.js"></script>

<script>
    document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
</script>

<script>
    function updateAppointmentStatus(elementId, url) {
        $.ajax({
            type: "POST",
            url: url,
            success: function (data) {
                if (data.success) {

                    var statusText = data.st === 'Approve' ? 'Approved' : 'Rejected';
                    var statusClass = data.st === 'Approve' ? 'text-success' : 'text-danger';
                    var statusElement = $('#status_' + data.id);
                    statusElement.text(statusText).removeClass('text-success text-danger text-warning').addClass(statusClass);
                } else {
                    alert('Failed to update appointment status.');
                }
            },
            error: function () {
                alert("An error occurred while updating appointment status.");
            }
        });
    }

    function ApproveAll() {
        var date1 = document.getElementById('fromDate').value
        var date2 = document.getElementById('toDate').value
       $.ajax({
                url: '/Management/Management/ApproveSelectedAppointments',
                data: { date1: date1, date2: date2},
                success: function (response) {
                    location.reload();
                }
            });

    }

    function MissedAll() {

       $.ajax({
                url: '/Management/Management/UpdateStatusMissed',
                data: {hospitalId: '@hospitalId' },
                success: function (response) {
                    location.reload();
                }
            });
    }

</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>


<script src="~/js/filter.js"></script>