@using Demo.Models.DummyModels
@using NonFactors.Mvc.Grid
@using System.Web.Mvc
@model IEnumerable<PatientAppoinmentModel>
@{
    DateTime today = DateTime.Today;
    var todayAppointments = @Model.Where(x => x.AppointmentDate.Date == today && (x.AppointmentStatus == "Approve" || x.AppointmentStatus == "Completed")).ToList();
}

<title>Book Appointment</title>
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet">

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .tick-mark {
        cursor: pointer;
    }
</style>


@if (TempData["LoginSuccess"] != null)
{
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success('@TempData["LoginSuccess"]');
    </script>
}
@if (TempData["success"] != null)
{
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success('@TempData["success"]');
    </script>
}
@if (User.IsInRole("User"))
    {
        <partial name="_UserHeader" />
    }
<div class="container mt-5">
    
    <div>
        @if (todayAppointments.Count > 0)
        {
            var Name = Model.FirstOrDefault()?.UserName;
            <h4>Today's Total Appointments of Mr.@Name : @todayAppointments.Count</h4>
        }
        else if (Model != null && Model.Any())
        {
            var userName = Model.FirstOrDefault()?.UserName;
            <h4>Total Appoinments of Mr.@userName</h4>
        }
    </div>

    @if (todayAppointments.Count > 4)
    {
        <div id="appointmentCarousel" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                @for (int i = 0; i < todayAppointments.Count; i += 4)
                {
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="row">
                            @for (int j = i; j < Math.Min(i + 4, todayAppointments.Count); j++)
                            {
                                var appointment = todayAppointments[j];
                                <div class="col-md-3">
                                    <div class="card @(appointment.AppointmentStatus == "Completed" ? "bg-success" : "bg-primary") text-white">
                                        <div class="card-body">
                                            <p class="card-title">Doctor : @appointment.DoctorName</p>
                                            <p class="card-text">Hospital :@appointment.HospitalName</p>
                                            <p class="card-text">Your appointment is booked on @appointment.AppointmentDate & @appointment.AppointmentTime.
                                            <p class="card-text">Status : @appointment.AppointmentStatus</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

    }
    else
    {
        if (todayAppointments != null)
        {
            <div class="row mt-3">
                @foreach (var appointment in todayAppointments)
                {
                    <div class="col-md-3">
                        <div class="card @(appointment.AppointmentStatus == "Completed" ? "bg-secondary" : "bg-primary") text-white">
                            <div class="card-body">
                                <p class="card-text"><strong>Your appointment is booked on @appointment.AppointmentDate.Date.ToString("dd-MM-yyyy") & @appointment.AppointmentTime.</strong></p>
                                <p class="card-text">Hospital :@appointment.HospitalName</p>
                                <p class="card-title">Doctor : @appointment.DoctorName</p>
                                @if (@appointment.AppointmentStatus == "Completed")
                                {
                                    <span>Status :<span class="card-text text-info"> <strong>@appointment.AppointmentStatus</strong></span></span>
                                }
                                else
                                {
                                    <span>Status :<span class="card-text text-dark"> <strong>@appointment.AppointmentStatus</strong></span></span>
                                }

                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }

    <div>
        <a asp-area="Management" asp-action="AddEditAppointment" asp-controller="Management" class="btn btn-success mt-3">Create Appointment</a>
    </div>
    @*28 June - User Appoinments *@
    <div class="mt-5 mb-5" id="stt">

        @(Html
        .Grid(Model)
        .Build(columns =>
        {

        columns.Add(model => model.DoctorName).Titled("DoctorName");
        columns.Add(model => model.HospitalName).Titled("Hospital");
        columns.Add(model => model.AppointmentDate).Titled("Date");
        columns.Add(model => model.AppointmentTime).Titled("Time");
        columns.Add(model => model.AppointmentStatus).Titled("Status");


        columns.Add().Titled("Edit").RenderedAs((model, row) =>
        {
        if(model.HospitalStatus == false || model.ManagementAdminStatus == false){
        return Html.Raw($"<span class='btn btn-primary' onclick='NotAccess()'>Edit</span>");
        }
        else{
        return Html.ActionLink("Edit", "AddEditAppointment", new { area = "Management", controller="Management", appId = model.AppointmentID }, new { @class = "btn btn-primary" });

        }
        });

        columns.Add().Titled("Delete").RenderedAs((model, row) =>
        {
        return Html.ActionLink("Delete", "DeleteAppoinment", new { area = "User", id = model.AppointmentID,userId = @ViewBag.userId }, new { @class = "btn btn-danger" });
        });
        }).Using(GridFilterMode.Header)
        .Empty("No data found")
        .Filterable()
        .Pageable(pager =>
        {
        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 2, "2" }, { 4, "4" },{5, "5" }};
        pager.ShowPageSizes = true;
        pager.PagesToDisplay = 3;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 5;
        })
        .Sortable()
        )
    </div>


</div>

<script src="~/js/mvc-grid/mvc-grid.js"></script>

<script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
        document.getElementById("CheckAll").addEventListener("change", function () {
        document.querySelectorAll("[id^='Check_'").forEach(checkbox => checkbox.checked = this.checked);
    });
</script>
<script>

    function NotAccess(){
             swal.fire({
       title: "Hospital InActive!",
       text: "As a User, you don't have the required privileges to perform any operations.!",
       icon: "error",
       button: "OK",
     });
         }
</script>
@if (todayAppointments.Count > 4)
{
    <script>

        $(document).ready(function () {
            $('#appointmentCarousel').carousel();
        });
    </script>
}
